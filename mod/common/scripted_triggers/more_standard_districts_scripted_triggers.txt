# tests whether the current planet produces
# at least the THRESHOLD for at least one of:
# * physics_research
# * society_research
# * engineering_research
# this = planet
# THRESHOLD = integer
has_research_exceeding = {
	optimize_memory
	OR = {
		planet_resource_compare = {
			resource = physics_research
			value >= $THRESHOLD$
			type = produces
		}
		planet_resource_compare = {
			resource = society_research
			value >= $THRESHOLD$
			type = produces
		}
		planet_resource_compare = {
			resource = engineering_research
			value >= $THRESHOLD$
			type = produces
		}
	}
}

# does not check arcology districts
# this = planet
msd_uses_planetary_diversity_special_district_set = {
	optimize_memory
	OR = {
		uses_district_set = pdarchive
		uses_district_set = pdplanethab
		uses_district_set = pdbioforge
		uses_district_set = pdbiofort
		uses_district_set = pdmachinefactory
		uses_district_set = pdmachinefort
		uses_district_set = pdfloraforge
	}
}

# this = planet
msd_uses_planetary_diversity_non_research_district_set = {
	optimize_memory
	OR = {
		uses_district_set = pdarchive
		uses_district_set = pdpalacearc
		uses_district_set = pdmilarc
		uses_district_set = pdcorpoarc
		uses_district_set = pdplanethab
		uses_district_set = pdbiocapital
		uses_district_set = pdmachinecapital
		uses_district_set = pdecocity
		uses_district_set = pdfloraforge
	}
}

# this = planet
msd_uses_planetary_diversity_arcology_district_set = {
	optimize_memory
	OR = {
		uses_district_set = pdecocity
		uses_district_set = pdpalacearc
		uses_district_set = pdmilarc
		uses_district_set = pdcorpoarc
		uses_district_set = pdbiocapital
		uses_district_set = pdmachinecapital
	}
}

# this = planet
msd_uses_gigastructural_engineering_habitat_district_set = {
	optimize_memory
	OR = {
		uses_district_set = giga_habitat
		has_planet_flag = giga_interstellar_hab
		uses_district_set = giga_gas_giant_habitat
	}
}

# this = planet
msd_uses_gigastructural_engineering_ring_world_district_set = {
	optimize_memory
	OR = {
		uses_district_set = maginot_ringworld_districts
		uses_district_set = penrose_ring
		has_planet_flag = giga_penrose
		uses_district_set = interstellar_ring
		has_planet_flag = giga_interstellar_ring
	}
}

# this = planet
msd_uses_gigastructural_engineering_gigastructure_district_set = {
	optimize_memory
	OR = {
		uses_district_set = giga_alderson
		uses_district_set = giga_birch
		uses_district_set = giga_planet
		uses_district_set = maginot_world_districts
		uses_district_set = virtual_ring
		uses_district_set = virtual_ring_industry
		has_planet_flag = giga_virtual_industry
		uses_district_set = acot_giga_void_sphere
		uses_district_set = giga_frameworld
	}
}

# this = planet
msd_uses_district_set_city_world = {
	optimize_memory
	OR = {
		uses_district_set = city_world
		msd_uses_planetary_diversity_arcology_district_set = yes
	}
}

# this = planet
msd_uses_district_set_habitat = {
	optimize_memory
	OR = {
		uses_district_set = habitat
		uses_district_set = pdplanethab
		msd_uses_gigastructural_engineering_habitat_district_set = yes
	}
}

# this = planet
msd_uses_district_set_ring_world = {
	optimize_memory
	OR = {
		uses_district_set = ring_world # includes PD exotic rings
		msd_uses_gigastructural_engineering_ring_world_district_set = yes
	}
}

# this = planet
msd_uses_regular_district_set = {
	optimize_memory
	msd_uses_district_set_city_world = no
	msd_uses_district_set_habitat = no
	msd_uses_district_set_ring_world = no
	msd_uses_planetary_diversity_special_district_set = no
	msd_uses_gigastructural_engineering_gigastructure_district_set = no
}

# this = planet
msd_has_any_science_district_or_buildings = {
	optimize_memory
	OR = {
		has_district = district_hab_science
		has_district = district_rw_science
		has_district = district_standard_cm_science
		has_building = building_research_lab_1
		has_building = building_research_lab_2
		has_building = building_research_lab_3
		has_building = building_institute
		has_building = building_supercomputer
	}
}